definitions:
  models.CategoryList:
    properties:
      code:
        type: string
      name:
        type: string
    type: object
  models.CreateCategoryParam:
    properties:
      category:
        type: string
      name:
        type: string
    required:
    - category
    - name
    type: object
  models.DeptList:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  models.FileUpload:
    properties:
      fileName:
        type: string
      filePath:
        type: string
    required:
    - fileName
    - filePath
    type: object
  models.GetCommentList:
    properties:
      Comment_Date:
        type: string
      Comment_ID:
        type: string
      Comments:
        type: string
      Content_Name:
        type: string
      Emp_ID:
        type: string
      Emp_NAME:
        type: string
      File_ID:
        type: string
    type: object
  models.InsertComments:
    properties:
      Comments:
        type: string
      Content_Name:
        type: string
      Emp_ID:
        type: string
      File_Path:
        type: string
      Tagging_User:
        items:
          type: string
        type: array
      Task_ID:
        type: string
    required:
    - Comments
    - Emp_ID
    - Task_ID
    type: object
  models.InsertDocument:
    properties:
      CreatedDate:
        type: string
      DocumentName:
        type: string
      DocumentType:
        type: string
      FilePath:
        type: string
      Status:
        type: string
      TaskID:
        type: string
    required:
    - CreatedDate
    - DocumentType
    - Status
    - TaskID
    type: object
  models.InsertSchedulerMasterTaskList:
    properties:
      assign_to:
        type: string
      creator:
        type: string
      dept:
        type: string
      estimasted_time_done:
        type: string
      generate_every:
        type: string
      priority:
        type: string
      remainder_date:
        type: string
      subject:
        type: string
      task_category:
        type: string
      task_name:
        type: string
      task_type:
        type: string
      topic_code:
        type: string
    type: object
  models.InsertUpdategroupAssignTOModels:
    properties:
      p_assigner:
        type: string
      p_group_assign:
        type: string
      p_param:
        type: string
      p_task_id:
        type: string
      p_user_assign_to:
        type: string
    type: object
  models.InsertingTaskManual:
    properties:
      addwho:
        type: string
      assign_to:
        type: string
      departemen:
        type: string
      end_date:
        type: string
      priority:
        type: string
      remainder_date:
        type: string
      start_date:
        type: string
      subject:
        type: string
      task_id_parent_of:
        type: string
      task_name:
        type: string
      task_type:
        type: string
      topic:
        type: string
    type: object
  models.MasterTagging:
    properties:
      tag_id:
        type: string
      tag_name:
        type: string
    type: object
  models.ParamClickedNotif:
    properties:
      taskid:
        type: string
    type: object
  models.TaskCategory:
    properties:
      name:
        type: string
    type: object
  models.ValueGetTaskID:
    properties:
      task_id:
        type: string
    type: object
  models.ValueGettingUserid:
    properties:
      name:
        type: string
      number_officer:
        type: string
    type: object
  models.ValueUpdateingTask:
    properties:
      progresvalue:
        type: string
      task_id:
        type: string
    type: object
  models.WaitingToCloseEmail:
    properties:
      addwho:
        type: string
      assign_to:
        type: string
      end_date:
        type: string
      subject:
        type: string
      task_id:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for a Todo List API.
  termsOfService: http://swagger.io/terms/
  title: Todo List API
  version: "1.0"
paths:
  /Tasklist/CreateCategory:
    post:
      parameters:
      - description: Inserting Data
        in: body
        name: file
        required: true
        schema:
          $ref: '#/definitions/models.CreateCategoryParam'
      responses: {}
  /Tasklist/DownloadingToMongoDB:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Successfully uploaded
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Upload a file
  /Tasklist/FetchData_Assign_To:
    get:
      responses: {}
  /Tasklist/GetCategory:
    get:
      consumes:
      - application/json
      description: Get list of categories based on parameter
      parameters:
      - description: Category parameter
        in: query
        name: param
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CategoryList'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get category list
      tags:
      - Tasklist
  /Tasklist/GetDepartemen:
    get:
      consumes:
      - application/json
      description: Get all departments from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DeptList'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get list of departments
      tags:
      - Tasklist
  /Tasklist/GetHeaderListData:
    get:
      responses: {}
  /Tasklist/GetIncomingTask:
    get:
      responses: {}
  /Tasklist/GetListData:
    get:
      consumes:
      - application/json
      description: Get various types of list data based on parameter
      parameters:
      - description: Parameter type (GetDataHeaderTaskList/GetDataDetailTaskList/SetDataSummaryTaskList/GetDataAssignTo/GetDataAssignToALL/ValidateUserLevel)
        in: query
        name: param
        required: true
        type: string
      - description: User ID
        in: query
        name: userid
        type: string
      - description: Task ID
        in: query
        name: task_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              data:
                type: object
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get list data
      tags:
      - Tasklist
  /Tasklist/GetListUserAssignHistory:
    get:
      responses: {}
  /Tasklist/GetListtComments:
    get:
      consumes:
      - application/json
      description: Get comments for a specific task
      parameters:
      - description: Task ID
        in: query
        name: task_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetCommentList'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get list of comments
      tags:
      - Tasklist
  /Tasklist/GetNotifTaskList:
    get:
      responses: {}
  /Tasklist/GetTaskCategory:
    get:
      consumes:
      - application/json
      description: Get all task categories from the task_category table
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TaskCategory'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get task category list
      tags:
      - Tasklist
  /Tasklist/GetTaskID:
    get:
      consumes:
      - application/json
      description: Get task ID information using comment ID
      parameters:
      - description: Comment ID
        in: query
        name: comment_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ValueGetTaskID'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get task ID by comment ID
      tags:
      - Tasklist
  /Tasklist/GetUserNotifTaskList:
    get:
      responses: {}
  /Tasklist/GetUserid:
    get:
      consumes:
      - application/json
      description: Get user information by PIN
      parameters:
      - description: Parameter type (GetUserid/GetUserName)
        in: query
        name: param
        required: true
        type: string
      - description: User PIN
        in: query
        name: pin
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ValueGettingUserid'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get user information
      tags:
      - Tasklist
  /Tasklist/InsertSchedulerMasterTask:
    post:
      parameters:
      - description: Inserting Data
        in: body
        name: file
        required: true
        schema:
          $ref: '#/definitions/models.InsertSchedulerMasterTaskList'
      responses: {}
  /Tasklist/InsertUpdategroupAssignTO:
    post:
      parameters:
      - description: Inserting Data
        in: body
        name: file
        required: true
        schema:
          $ref: '#/definitions/models.InsertUpdategroupAssignTOModels'
      responses: {}
  /Tasklist/InsertingComment:
    post:
      parameters:
      - description: Inserting Comments
        in: body
        name: file
        required: true
        schema:
          $ref: '#/definitions/models.InsertComments'
      responses: {}
  /Tasklist/InsertingDocumentUpload:
    post:
      parameters:
      - description: Inserting Document Upload
        in: body
        name: file
        required: true
        schema:
          $ref: '#/definitions/models.InsertDocument'
      responses: {}
  /Tasklist/InsertingSubtask:
    post:
      parameters:
      - description: Inserting Task Manual
        in: body
        name: file
        required: true
        schema:
          $ref: '#/definitions/models.InsertingTaskManual'
      responses:
        "200":
          description: Successfully uploaded
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Inserting Subtask
  /Tasklist/InsertingTaskManual:
    post:
      consumes:
      - application/json
      description: Upload a file to the specified bucket using the file path and file
        name.
      parameters:
      - description: Inserting Task Manual
        in: body
        name: file
        required: true
        schema:
          $ref: '#/definitions/models.InsertingTaskManual'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully uploaded
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Inserting Task Manual
  /Tasklist/MasterTagging:
    get:
      consumes:
      - application/json
      description: Get all master tagging from the master_tagging
      parameters:
      - description: PARAM
        in: query
        name: param
        type: string
      - description: TAGGING
        in: query
        name: tagging
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.MasterTagging'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Master Tagging
      tags:
      - Tasklist
  /Tasklist/SendingNotifDone:
    post:
      parameters:
      - description: Inserting Task Manual
        in: body
        name: file
        required: true
        schema:
          $ref: '#/definitions/models.WaitingToCloseEmail'
      responses:
        "200":
          description: Successfully uploaded
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: SendingNotifDone
  /Tasklist/UpdateStatusClickednotif:
    post:
      parameters:
      - description: File Upload Info
        in: body
        name: file
        required: true
        schema:
          $ref: '#/definitions/models.ParamClickedNotif'
      responses: {}
  /Tasklist/UpdatingProgressTask:
    post:
      consumes:
      - application/json
      description: Upload a file to the specified bucket using the file path and file
        name.
      parameters:
      - description: Updating Progress Task Value
        in: body
        name: file
        required: true
        schema:
          $ref: '#/definitions/models.ValueUpdateingTask'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully uploaded
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Inserting Task Manual
  /Tasklist/UploadFile:
    post:
      consumes:
      - application/json
      description: Upload a file to the specified bucket using the file path and file
        name.
      parameters:
      - description: File Upload Info
        in: body
        name: file
        required: true
        schema:
          $ref: '#/definitions/models.FileUpload'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully uploaded
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Upload a file
  /Tasklist/UploadingToMongoDB:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: File to upload
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successfully uploaded
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Upload a file
  /Tasklist/UploadingToMongoDB_V1:
    post:
      consumes:
      - application/json
      parameters:
      - description: File Upload Info
        in: body
        name: file
        required: true
        schema:
          $ref: '#/definitions/models.FileUpload'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully uploaded
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Upload a file
  /Tasklist/ValidateDocType:
    get:
      consumes:
      - application/json
      description: Validate document type for a given task
      parameters:
      - description: Task ID
        in: query
        name: param
        required: true
        type: string
      - description: Parameter
        in: query
        name: parameter
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              data:
                type: object
            type: object
      summary: Get document type validation
      tags:
      - Tasklist
swagger: "2.0"
